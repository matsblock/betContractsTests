// // SPDX-License-Identifier: UNLICENSED
// pragma solidity ^0.8.9;
// import '@openzeppelin/contracts/token/ERC20/IERC20.sol';
// import './enetscoreInterfaces.sol';
// import './getMatchScoreAndWinner.sol';

// contract setBets {

//     address public admin;
//     address tokenAddress = 0xeE609996ac3821499aEED5C57f3F7507D0bdC481;
//     address enetScoreInterfacesAddress = 0xC0a3bfEAa7BF019e6c56f6d39113AC335aBD9651;
//     enetscoreInterfaces enetscoreInterfacesContract  = enetscoreInterfaces(enetScoreInterfacesAddress);
//     address getMatchScoreAndWinnerAddress = 0x0b5bC92aC69c69cAb658F4B7176d74625D8BF4b9;
//     getMatchScoreAndWinner getMatchScoreAndWinnerContract  = getMatchScoreAndWinner(getMatchScoreAndWinnerAddress);

//  //   enum betOption {H,A,T}
//     enum winnerResultEnum {Home, Away, Tied}
//     struct bet {winnerResultEnum option;uint256 amount;}
//     mapping(address => bet) public betBalances;
//     uint public totalBetsToA;
//     uint public totalBetsToB; 
//     bet public winner; 
//     string public gameDetailsString;
//     string public gameScoreString;

//     winnerResultEnum public matchWinner;
//     string public matchStatus;

//     string public quiengano;

//     constructor() {
//         admin = msg.sender;
//     }

//     modifier onlyAdmin() {
//         require(msg.sender == admin, 'only admin');
//         _;
//     }

//     function setBet(winnerResultEnum _bet, uint256 amount) public {
        
//         IERC20(tokenAddress).transferFrom(
//             msg.sender,
//             address(this),
//             amount
//         );
//         betBalances[msg.sender].amount += amount;
//         betBalances[msg.sender].option = _bet;
//         if (_bet == winnerResultEnum.Home) {
//             totalBetsToA += amount;
//         }
//         if (_bet == winnerResultEnum.Away) {
//             totalBetsToB += amount;
//         }
//     }

//     function withdrawBetRewards(
//         uint amount)
//         public {
//         IERC20(tokenAddress).transfer(msg.sender, amount);
//     }

//     function setWinner(winnerResultEnum _winner) public {
//         winner.option = _winner;
//     }


//     // function setScore() public {   
//     //     getMatchScoreAndWinnerContract.getGameScoreAsString();
//     // }


//     function getMatchWinner() public {  
//         matchWinner = getMatchScoreAndWinnerContract.getWinner();
//     }
  
//     function getWinnerPrint() public {  
//         if (matchWinner == winnerResultEnum.Home) { 
//             quiengano = "gano el local";
//         } else if (matchWinner == winnerResultEnum.Away) { 
//             quiengano = "gano el visitante";
//         } else if (matchWinner == winnerResultEnum.Tied) { 
//             quiengano = "empate";
//         } 
//     }

//     function getMatchStatus() public {  
//             matchStatus = getMatchScoreAndWinnerContract.status();
//     }
    
//     function claimRewards() public {
//         uint rewards;
//         if (matchWinner == betBalances[msg.sender].option){
//             rewards = betBalances[msg.sender].amount * 2;
//             withdrawBetRewards(rewards);
//         }
//     }
    
//     function getGameDetailsAsString() public {
//          gameDetailsString = enetscoreInterfacesContract.gameDetailsAsString();
//     }

//     function getGameScoreAsString() public {
//           gameScoreString = enetscoreInterfacesContract.GameScoreAsString();
//     }
// }
